<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "symbol.dtd">
<symbols>
    <blocks>
        <beginregex>{</beginregex>
        <endregex>}</endregex>
    </blocks>
	
	<symbol id="language.variable" hidden="yes" casesensitive="no" useforautocomplete="yes"  color="#006ff8" image="SymbolO">
		<regex>([A-Za-z\._]+)\s?=</regex>
	</symbol>
	
    <symbol id="language.method" image="SymbolM" indentation="1" ignoreblocks="yes" useforautocomplete="yes">
        <regex>(?:^|[\r\n])[ \t]*[-+][^(-;]*\([A-Za-z0-9 *_]*\)([A-Za-z0-9_ \t]+[^{;]*)[\{;]</regex>
        <postprocess>
            <find>[\n\r]</find>
            <replace> </replace>
            <find>\s+</find>
            <replace> </replace>
            <find> $</find>
            <replace></replace>
        </postprocess>
        <arguments>:(\s*(\([^)]+\)\s*[^\s]+))</arguments>
        <captures>{ "arguments" : "1" }</captures>
    </symbol>

    <symbol id="language.class" font-weight="bold" image="SymbolC"  useforautocomplete="yes" indentation="0" ignoreblocks="no">
        <regex>@implementation\s([^[:cntrl:]{]*)</regex>
        <postprocess>
            <find>([\n\r]| +)</find>
            <replace> </replace>
			<find>@implementation\s|\s</find>
			<replace></replace>
        </postprocess>
    </symbol>
    
    <symbol id="language.css" font-weight="bold" image="SymbolH"  useforautocomplete="yes" indentation="0" ignoreblocks="no">
        <regex>@interface\s(\w+)</regex>
        <postprocess>
            <find>([\n\r]| +)</find>
            <replace> </replace>
            <find>@interface\s|\s</find>
            <replace></replace>
        </postprocess>
    </symbol>

    <symbol id="language.prototype" font-weight="bold" image="SymbolS" indentation="1" ignoreblocks="yes">
        <regex>@synthesize\s([^[:cntrl:]{]*);</regex>
        <postprocess>
            <find>([\n\r]| +)</find>
            <replace></replace>
        </postprocess>
    </symbol>

    <symbol id="language.class" font-weight="bold" font-style="italic" image="SymbolH">
        <regex>(@protocol[^[:cntrl:]{\/]*)</regex>
        <postprocess>
            <find>([\n\r]| +)</find>
            <replace> </replace>
						<find>@protocol|\s:\s\w+|\s</find>
						<replace></replace>
        </postprocess>
    </symbol>
	
	<symbol id="Pragma Marks" font-weight="bold" indentation="0" ignoreblocks="yes" show-in-comments="yes" image="SymbolMark">
        <regex>(#pragma mark[	 -]*[^\n]*)\n</regex>
        <postprocess>
            <find>#pragma mark[-	 \n]*</find> <!-- An empty string places a separator -->
            <replace></replace>
        </postprocess>
    </symbol>
	
	
	<symbol id="Defines" image="Symbol#" indentation="0" ignoreblocks="yes">
      <regex>#define[ \t]*([\w\d()]*)[ \t]+[^\n\r]*[\n\r]</regex>
    </symbol>
	
	<symbol id="CVS/SVN conflict" font-weight="bold" image="SymbolWarn" indentation="0" ignoreblocks="no">
	        <regex>^&lt;&lt;&lt;&lt;&lt;&lt;&lt;([\n\r]|.)*?======([\n\r]|.)*?&gt;&gt;&gt;&gt;&gt;&gt;&gt;</regex>
	        <postprocess>
	            <find>.*</find>
	            <replace>Versioning conflict!</replace>
	        </postprocess>
	    </symbol>
    	
		<symbol id="language.variable" font-weight="bold" hidden="yes" useforautocomplete="yes" indentation="0" ignoreblocks="no"  image="SymbolP">
			<regex>\.(\w{2,}+)</regex>
		</symbol>
		

	<symbol id="TODO" font-weight="normal" font-style="normal" image="SymbolT" indentation="0" ignoreblocks="no" show-in-comments="yes">
	    <regex>(TODO?:?\s[^\n]+)</regex>
      <postprocess>
        <find>TODO:</find>
        <replace>TODO</replace>
      </postprocess>
    </symbol>
		
    <symbol id="language.class" font-weight="bold" font-style="italic" image="SymbolH"  hidden="yes" useforautocomplete="yes">
        <regex>@protocol\s([^[:cntrl:\s]{\/]*)</regex>
    </symbol>
		
    <symbol id="language.class" font-weight="bold" font-style="italic" image="SymbolC"  hidden="yes" useforautocomplete="yes">
        <regex>@implementation\s([^[\s\n\r\t]{\/]*)</regex>
    </symbol>
	
</symbols>
